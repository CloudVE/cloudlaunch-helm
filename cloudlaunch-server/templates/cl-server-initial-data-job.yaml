{{- $context := . -}}
{{- /* Loop through the initial_data array in order, checking which data files are enabled.
        The index determines the hook weight, so that the jobs are run in order
    */ -}}
{{- range $index, $dataset := .Values.initial_data -}}
{{- /* Loop through inner map. Only render this job template if enabled. */ -}}
{{- range $key, $val := $dataset -}}
{{ if $val }}
{{- $data_file := printf "/app/initial_data/%s.json" $key -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "cloudlaunch-server.fullname" $context }}-data-{{ $key }}-job
  labels:
    app: {{ template "cloudlaunch-server.name" $context }}
    chart: {{ template "cloudlaunch-server.chart" $context }}
    release: {{ $context.Release.Name }}
    heritage: {{ $context.Release.Service }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": {{ add $index 20 | quote }}
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    spec:
      containers:
        - name: {{ $context.Values.container_name | default $context.Chart.Name }}
          image: "{{ $context.Values.image.repository }}:{{ $context.Values.image.tag }}"
          imagePullPolicy: {{ $context.Values.image.pullPolicy }}
          command: ['python', '{{ $context.Values.django_dir }}/manage.py', 'loaddata', {{ $data_file | quote }}]
          env:
          {{- include "cloudlaunch-server.envvars" $context }}
          volumeMounts:
            - name: initial-data
              mountPath: /app/initial_data
              readOnly: true
      volumes:
        - name: initial-data
          configMap:
            name: {{ template "cloudlaunch-server.fullname" $context }}-initial-data
      restartPolicy: Never
---
{{ end }}
{{ end }}
{{ end }}